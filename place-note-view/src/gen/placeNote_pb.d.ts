// @generated by protoc-gen-es v1.3.0 with parameter "target=js+dts"
// @generated from file placeNote.proto (package placeNote, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from enum placeNote.AuthMethod
 */
export declare enum AuthMethod {
  /**
   * @generated from enum value: UNKNOWN = 0;
   */
  UNKNOWN = 0,

  /**
   * @generated from enum value: GOOGLE = 1;
   */
  GOOGLE = 1,

  /**
   * @generated from enum value: EMAIL = 2;
   */
  EMAIL = 2,
}

/**
 * @generated from message placeNote.RegsiterUserRequest
 */
export declare class RegsiterUserRequest extends Message<RegsiterUserRequest> {
  /**
   * @generated from field: string authToken = 1;
   */
  authToken: string;

  /**
   * @generated from field: placeNote.AuthMethod authMethod = 2;
   */
  authMethod: AuthMethod;

  /**
   * @generated from field: string userSettingId = 3;
   */
  userSettingId: string;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  constructor(data?: PartialMessage<RegsiterUserRequest>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "placeNote.RegsiterUserRequest";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RegsiterUserRequest;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RegsiterUserRequest;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RegsiterUserRequest;

  static equals(a: RegsiterUserRequest | PlainMessage<RegsiterUserRequest> | undefined, b: RegsiterUserRequest | PlainMessage<RegsiterUserRequest> | undefined): boolean;
}

/**
 * @generated from message placeNote.UserResponse
 */
export declare class UserResponse extends Message<UserResponse> {
  /**
   * @generated from field: string token = 1;
   */
  token: string;

  /**
   * @generated from field: placeNote.AuthMethod authMethod = 2;
   */
  authMethod: AuthMethod;

  /**
   * @generated from field: string userSettingId = 3;
   */
  userSettingId: string;

  /**
   * @generated from field: string name = 4;
   */
  name: string;

  constructor(data?: PartialMessage<UserResponse>);

  static readonly runtime: typeof proto3;
  static readonly typeName = "placeNote.UserResponse";
  static readonly fields: FieldList;

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): UserResponse;

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): UserResponse;

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): UserResponse;

  static equals(a: UserResponse | PlainMessage<UserResponse> | undefined, b: UserResponse | PlainMessage<UserResponse> | undefined): boolean;
}

